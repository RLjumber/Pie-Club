generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      String   @id @default(uuid()) @db.Uuid
  email   String   @unique
  name    String?
  posts   Post[]
  recipes Recipe[]
  profile Profile?
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @db.Uuid
}

model Recipe {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  title       String
  content     String
  ingredients String[]
  steps       String[]
  author      User       @relation(fields: [authorId], references: [id])
  authorId    String     @db.Uuid
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId  String  @unique @db.Uuid
}

// must run 'prisma generate' after any changes to Prisma schema.

// Ideas:
//    - Recipes array in user table, this recipes array will reference the recipe table. Recipe table holds information like Post does. 

//    - Add option to include recipe in a post, make it null so you dont have to

//    - On frontend, when you go to user page, if user is you, (id matches id) then show edit page. On user page have bio and posts, then have page for recipes
  

